"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    me: User @auth
    users: [User!]! @guard(with: ["api"]) @paginate(defaultCount: 10)
    user(id: ID @eq): User @find
    persons: [Person!]! @paginate(defaultCount: 10)
    person(id: ID @eq): Person @find
    pets: [Pet!]! @paginate(defaultCount: 10)
    pet(id: ID @eq): Pet @find
    phones: [Phone!]! @paginate(defaultCount: 10)
    phone(id: ID @eq): Phone @find
    relationships: [Relationship!]! @paginate(defaultCount: 10)
    relationship(id: ID @eq): Relationship @find
    relationshipTypes: [RelationshipType!]! @all
    relationshipType(id: ID @eq): RelationshipType @find
}

type User {
    id: ID!
    name: String!
    email: String!
    email_verified_at: DateTime!
    created_at: DateTime!
    updated_at: DateTime!
}

type Person  {
    id: ID!
    first_name: String!
    middle_name: String
    last_name: String!
    created_at: DateTime!
    updated_at: DateTime!
    pets: [Pet!]! @hasMany
    phones: [Phone!]! @hasMany
    addresses: [Address!]! @hasMany
    relationships: [Relationship!]! @hasMany
    petCount: Int! @count(relation: "pets")
    addressCount: Int! @count(relation: "addresses")
    phoneCount: Int! @count(relation: "phones")
}

type Pet  {
    id: ID!
    name: String!
    pet_type: String!
    created_at: DateTime!
    updated_at: DateTime!
    person: Person! @belongsTo
}

type Phone  {
    id: ID!
    area_code: Int!
    number: String!
    extension: String!
    created_at: DateTime!
    updated_at: DateTime!
    person: Person! @belongsTo
}

type Address  {
    id: ID!
    street1: String!
    street2: String
    city: String!
    state: String!
    zip: String!
    created_at: DateTime!
    updated_at: DateTime!
    person: Person! @belongsTo
}

type Relationship {
    id: ID!
    person: Person! @belongsTo
    relative: Person! @belongsTo
    type: RelationshipType! @hasOne
}

type RelationshipType {
    id: ID!
    name: String!
    created_at: DateTime!
    updated_at: DateTime!
    relationships: [Relationship!]! @hasMany
    relationshipCount: Int! @count(relation: "relationships")
}